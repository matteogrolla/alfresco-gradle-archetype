/**
 *     Licensed to the Apache Software Foundation (ASF) under one
       or more contributor license agreements.  See the NOTICE file
       distributed with this work for additional information
       regarding copyright ownership.  The ASF licenses this file
       to you under the Apache License, Version 2.0 (the
       "License"); you may not use this file except in compliance
       with the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing,
       software distributed under the License is distributed on an
       "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
       KIND, either express or implied.  See the License for the
       specific language governing permissions and limitations
       under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

/*-- Configuration parameters --*/

def groupId = "com.sourcesense"
def artifactId = "testEx2"
def version = "1.0"

def alfDir = "/Users/matteogrolla/Development/alfresco/alfresco-community-4.2.x"
def shareTomcatDir = "/Users/matteogrolla/Development/alfresco/share-community-4.2.x"
def dbName = "alfresco_community_42x"   //"alfresco_41x"
//version of the allfresco maven artifacts to download
def alfVersion = "4.2.c"
/*-----------------*/

def artifactIdLC = artifactId.toLowerCase()
def modelPrefix = artifactId
def alfTomcatDir = "${alfDir}/tomcat".toString()
def wfModelPrefix = "${artifactId}Wf".toString()
def tokens = [groupId: groupId, artifactId: artifactId, version: version, modelPrefix: modelPrefix, wfModelPrefix: wfModelPrefix, dbName: dbName, alfDir: alfDir, alfTomcatDir: alfTomcatDir, shareTomcatDir: shareTomcatDir, alfVersion: alfVersion]


/*
TODO: 
- sistemare settings.gradle
-fornire una version minimale di template
-rimuovere i files empty.txt dopo la copia
-fare il filtering solo dei files necessari e delle properties necessarie
        usando expand se nel file trovo ${var1} e var1 non è definita fallisce il build
        dare nome __artifactid__ ai files di config
-fornire una versione con esempi di customizzazioni
    -esempio importazione file di config
    -esempio workflow funzionante (vedere se esercizio8 di può pubblicare)
    
BUGS:
!!! Important !!!!:
	il plugin di eclipse sembra bacato
	se clicco su refresh in gradle cancella
		build.gradle
		settings.gradle
	nel parent project
	MEGLIO USARE COMMANDLINE
*/

task copyAlfrescoProjectFilt(type: Copy){
    from '__artifactId__-alfresco'
    into "../${artifactId}/${artifactId}-alfresco"

    eachFile { details ->
        def targetPath = details.path.replace('__artifactId__', artifactId)
        targetPath = targetPath.replace('__eff__', '')
        details.path = targetPath
    }

    include '**/*.xml' 
    include '**/*.properties'
    include '**/*__eff__.gradle'

    //def wfModelPrefix = "${modelPrefix}Wf"

    filter(ReplaceTokens, tokens: tokens)
    includeEmptyDirs = false
}

task copyAlfrescoProjectNonFilt(type: Copy){
    from '__artifactId__-alfresco'
    into "../${artifactId}/${artifactId}-alfresco"

    eachFile { details ->
        def targetPath = details.path.replace('__artifactId__', artifactId)
        targetPath = targetPath.replace('__eff__', '')
        details.path = targetPath
    }

    exclude '**/*.xml' 
    exclude '**/*.properties'
    exclude '**/*.gradle'
    exclude '**/*__eff__.gradle'

    includeEmptyDirs = false
}

task createAlfrescoProject(dependsOn: [copyAlfrescoProjectFilt, copyAlfrescoProjectNonFilt]){
}


task copyShareProjectFilt(type: Copy){
    from '__artifactId__-share'
    into "../${artifactId}/${artifactId}-share"

    eachFile { details ->
        def targetPath = details.path.replace('__artifactId__', artifactId)
        targetPath = targetPath.replace('__eff__', '')
        details.path = targetPath
    }

    include '**/*.xml' 
    include '**/*.properties'
    include '**/*__eff__.gradle'

    //def wfModelPrefix = "${modelPrefix}Wf"

    filter(ReplaceTokens, tokens: tokens)
    includeEmptyDirs = false
}

task copyShareProjectNonFilt(type: Copy){
    from '__artifactId__-share'
    into "../${artifactId}/${artifactId}-share"

    eachFile { details ->
        def targetPath = details.path.replace('__artifactId__', artifactId)
        targetPath = targetPath.replace('__eff__', '')
        details.path = targetPath
    }

    exclude '**/*.xml' 
    exclude '**/*.properties'
    exclude '**/*.gradle'
    exclude '**/*__eff__.gradle'

    includeEmptyDirs = false
}

task createShareProject(dependsOn: [copyShareProjectFilt, copyShareProjectNonFilt]){
}

task createProject(type: Copy, dependsOn: [createAlfrescoProject, createShareProject]) {
	from '.'
	into "../${artifactId}"
	include '*__eff__.gradle'
	
	eachFile { details ->
        def targetPath = details.path.replace('__eff__', '')
        details.path = targetPath
    }
	
	filter(ReplaceTokens, tokens: tokens)
}
