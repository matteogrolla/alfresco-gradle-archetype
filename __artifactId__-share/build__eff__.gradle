/* test */

project(':@artifactId@-share') {

    apply plugin: 'java'

    /*def artifactId = "@artifactId@"
     def groupId = "@groupId@"
     def version = "@version@"
     def alfDir = "@alfDir@"
     def shareTomcatDir = "@shareTomcatDir@"
     def alfVersion = "@alfVersion@"*/

    /*
     TODO: 
     -completare tasks maven
     -completare tasks ant
     -modicare nomi files e directories solo in una fase di inizializzazione (possibilmente durante installazione archetype)        
     -unit tests (anche js)
     -integration tests
     */

    task fastDeploy(type: Copy){
        group = "Alfresco"
        description = "Deploy project to Alfresco"
        
        destinationDir = file("${shareTomcatDir}/webapps/share")

        //config filt
        into("WEB-INF/classes"){
            from ( fileTree(dir: 'src/main/amp/config') )
            include '**/*.xml'
            include '**/*.properties'
        }

        //config non filt
        into("WEB-INF/classes"){
            from ( fileTree(dir: 'src/main/amp/config') )
            exclude '**/*.xml'
            exclude '**/*.properties'
        }

        //web
        into("."){ from 'src/main/amp/web' }

        //libs
        into("WEB-INF/lib"){ from 'build/libs' }
    }

    task createAmp (type: Jar, dependsOn: build){
        group = "Alfresco"
        description = "Create AMP"
        
        destinationDir file('dist')
        from ('src/main/amp'){
            include 'file-mapping.properties'
            include 'module.properties'
        }
        into('lib') { from 'build/libs' }
        into('WEB-INF/classes/alfresco') { from 'src/main/amp/config/alfresco' }
        into('web') { from 'src/main/amp/web' }

        baseName "${artifactId}-share"
        extension 'amp'
    }

    task deployAmp(type: Copy, dependsOn: createAmp) {
        group = "Alfresco"
        description = "Deploy AMP to Alfresco"
        
        from "dist"
        into "${alfDir}/amps_share"
    }

    task restoreWar() {
        group = "Alfresco"
        description = "Restore alfresco.war from alfresco.war.bak"
        
        doLast {
            logger.info("restoring ${shareTomcatDir}/webapps/share.war")
            delete "${shareTomcatDir}/webapps/share.war"
            delete "${shareTomcatDir}/webapps/share"
            copy {
                from "${shareTomcatDir}/webapps/share.war.bak"
                into "${shareTomcatDir}/webapps"
                rename '(.*).bak', '$1'
            }
        }
    }

    task restoreApp(dependsOn: restoreWar) {
        group = "Alfresco"
        description = "Restore webapps/alfresco from alfresco.war.bak"
        
        doLast {
            copy {
                from zipTree("${shareTomcatDir}/webapps/share.war")
                into "${shareTomcatDir}/webapps/share"
            }
        }
    }

    repositories {
        mavenCentral()

        maven {
            name "alfresco-public"
            url "https://artifacts.alfresco.com/nexus/content/groups/public"
        }

        maven {
            name "alfresco-public-snapshots"
            url "https://artifacts.alfresco.com/nexus/content/groups/public-snapshots"
        }

        maven {
            name "alfresco-thirdparty"
            url "https://artifacts.alfresco.com/nexus/content/repositories/thirdparty/"
        }
    }

    dependencies {
        //compile (group: "org.springframework.extensions.surf", name: "spring-surf-api", version: "1.2.0-SNAPSHOT")
    }
}